
bin/sopka:
  27:   local i perhapsDelimiter="" startFrom=$((${#BASH_LINENO[@]}-1))
  28:   for ((i=${startFrom}; i>=1; i--)); do
  30:       printf "\n" >&2
  106:   "$1" "${@:2}"
  111:       sopkafile::main

./lib/fs.sh:
  66:   for folder in "$@"; do
  100:   sudo mount -a

./lib/vmware.sh:
  19:     hostnamectl status | grep --quiet "Virtualization:.*vmware"
  35:     powershell -Command "Get-WmiObject Win32_computerSystem" | grep --quiet --fixed-strings "VMware"
  69:     find /mnt/hgfs -maxdepth 1 -mindepth 1 -type d | while IFS="" read -r dirPath; do

./lib/config.sh:
  50:           git diff --ignore-cr-at-eol --color --unified=6 --no-index "${dst}" "${src}" | tee
  52:           diff --strip-trailing-cr --context=6 --color "${dst}" "${src}"

./lib/tailscale.sh:
  37:   status="$(tailscale status)"

./lib/postgresql.sh:
  35:     for dest in /usr/local/Cellar/postgresql/*; do
  37:         for file in "${folder}"/*; do
  45:     for dest in /usr/share/postgresql/*; do
  47:         for file in "${folder}"/*; do

./lib/ssh.sh:
  53:         | secret-tool store --label="Unlock password for: ${HOME}/.ssh/id_ed25519" unique "ssh-store:${HOME}/.ssh/id_ed25519"
  74:     echo "${password}" | SSH_ASKPASS="${SOPKA_DIR}/lib/macos/exec-cat.sh" DISPLAY=1 ssh-add -K "${keyFile}"

./lib/restic.sh:
  21:     list+=(restic::init)
  24:   list+=(restic::check-and-read-data)
  25:   list+=(restic::forget-and-prune)
  26:   list+=(restic::view)
  27:   list+=(restic::mount)
  28:   list+=(restic::umount)
  31:     list+=(restic::systemd::init-service)
  32:     list+=(restic::systemd::start-service)
  33:     list+=(restic::systemd::stop-service)
  35:     list+=(restic::systemd::enable-timer)
  36:     list+=(restic::systemd::disable-timer)
  38:     list+=(restic::systemd::status)
  39:     list+=(restic::systemd::log)
  84:     declare -A options

./lib/vscode.sh:
  53:       cat "${extensionsList}" | while IFS="${ifs_value}" read -r extension; do

./lib/firefox.sh:
  34:   for profileFolder in "${HOME}/.mozilla/firefox"/*.default-release; do

./lib/shell.sh:
  18:   for cmd in "$@"; do

./lib/macos/exec-cat.sh:
  17: exec cat

./lib/tools.sh:
  26:   cat <<EOT

./lib/menu.sh:
  26:   for i in "${!list[@]}"; do
  41:   ${actionFunction}
  54:   for i in "${!list[@]}"; do
  69:   "$1" "${selectedArgument}"

./lib/git.sh:
  66:         | secret-tool store --label="Git: https://github.com/" server github.com user "${SOPKA_GITHUB_LOGIN}" protocol https xdg:schema org.gnome.keyring.NetworkPassword

./lib/linux.sh:
  88:   ! grep --quiet "^flags.*:.*hypervisor" /proc/cpuinfo

./lib/borg.sh:
  20:   list+=(borg::init)
  21:   list+=(borg::check-verify)
  22:   list+=(borg::view)
  23:   list+=(borg::mount)
  24:   list+=(borg::umount)
  25:   list+=(borg::export-key)
  26:   list+=(borg::import-key)
  27:   list+=(borg::connect-sftp)
  29:   list+=(borg::systemd::init-service)
  30:   list+=(borg::systemd::start-service)
  31:   list+=(borg::systemd::stop-service)
  33:   list+=(borg::systemd::enable-timer)
  34:   list+=(borg::systemd::disable-timer)
  36:   list+=(borg::systemd::status)
  37:   list+=(borg::systemd::log)
  116:     return
  125:     return

./lint/lint.sh:
  19: ruby lint/check-shell-error-handling.rb bin/* $(find . -name '*.sh') | tee lint/check-shell-error-handling.txt
  21: shellcheck bin/* $(find . -name '*.sh') -e SC1090 | tee lint/shellcheck.txt

./index.sh:
  20:   fail() {
  21:     local i perhapsDelimiter="" startFrom=$((${#BASH_LINENO[@]}-1))
  22:     for ((i=${startFrom}; i>=1; i--)); do
  24:         printf "\n" >&2

./docs/make.sh:
  36: for file in lib/*.sh; do
