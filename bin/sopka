#!/usr/bin/env bash

#  Copyright 2012-2021 Stanislav Senotrusov <stan@senotrusov.com>
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

if [ "${0:0:1}" != "-" ]; then
  # set shell options
  if [ "${SOPKA_VERBOSE:-}" = true ]; then
    set -o xtrace
  fi
  set -o nounset
fi

sopka::load-index() {
  local sopkaBinRealPath sopkaBinRealDirPath sopkaIndexDir

  if [ -L "${SOPKA_BIN_PATH}" ]; then
    sopkaBinRealPath="$(readlink -f "${SOPKA_BIN_PATH}")" || { echo "Sopka loader: Unable to readlink '${SOPKA_BIN_PATH}' ($?)" >&2; exit 1; }
  else
    sopkaBinRealPath="${SOPKA_BIN_PATH}"
  fi
 
  sopkaBinRealDirPath="$(dirname "${sopkaBinRealPath}")" || { echo "Sopka loader: Unable to get a dirname of '${sopkaBinRealPath}' ($?)" >&2; exit 1; }
  sopkaIndexDir="$(cd "${sopkaBinRealDirPath}"/.. >/dev/null 2>&1 && pwd)" || { echo "Sopka loader: Unable to determine full path for '${sopkaBinRealDirPath}/..' ($?)" >&2; exit 1; }

  . "${sopkaIndexDir}/index.sh" || { echo "Sopka loader: Unable to load '${sopkaIndexDir}/index.sh' ($?)" >&2; exit 1; }
}

export SOPKA_BIN_PATH="${BASH_SOURCE[0]}"

# Load sopka library index file
sopka::load-index || { echo "Sopka loader: Unable to load sopka library index file ($?)" >&2; exit 1; }

# == we should have all library functions available by now ==

# Remove sopka::load-index function
unset -f sopka::load-index || fail "Sopka loader: Unable to remove sopka::load-index function"

# Load sopkafile
sopka::load-sopkafile || fail "Sopka loader: Unable to load sopkafile"

# Run function provided in first argument, or run (if defined) sopkafile::main.
# I use "test" instead of "|| fail" here for the case if someone wants to "set -o errexit" in their functions
if [ -n "${1:-}" ]; then
  declare -f "$1" >/dev/null || fail "Sopka loader: Argument must be a function name: $1"
  "$@"
  test $? = 0 || fail "Sopka loader: Error performing $1"
else
  if [ "${0:0:1}" != "-" ] && [ "$(basename "$0")" = "sopka" ]; then
    if declare -f sopkafile::main >/dev/null; then
      sopkafile::main
      test $? = 0 || fail "Sopka loader: Error performing sopkafile::main"
    elif sopka-menu::is-present; then
      sopka-menu::display
      test $? = 0 || fail "Sopka loader: Error performing sopka-menu::display"
    else
      fail "Sopka loader: Please specify a function name to run, define a sopkafile::main, or add items to a menu"
    fi
  fi
fi
